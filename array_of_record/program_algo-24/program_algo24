array_satu_dimensi
{i.s:}
{f.s:}

{kamus}
    const
        maks_data=10
    type
        larik1= array[1..maks_data] of string
        larik2= array[i..maks_data] of integer
        larik3= array[i..maks_data] of char
    
    nama    :larik1
    nilai   :larik2
    indeks  :larik3

procedure isi_data(output n:integer, output nama:larik1, output nilai:larik2)
{i.s:}
{f.s:}

{kamus}

{algoritam}    
    input(n)  //banyak nya data yg akan di masukan 
    while(n < 0) or (n > maks_data) do
        output('maaf data yang di masukan harus 1-10)
        input(n)
    endwhile
    for i:= 1 to n do
        input(nama[i])
        input(nilai[i])
    endfor
endprocedure

function idx(ni:integer)-> char
{i.s:}
{f.s:}

{kamus}

{algoritma}
    depend (ni) of
        80..100 : idx <- 'A'
        70..79  : idx <- 'B'
        60..69  : idx <- 'C'
        50..59  : idx <- 'D'
        0..49   : idx <- 'E'
    enddepend;
endfunction;        

procedure tampil_data(input n:integer, input nama:larik1, input nilai:larik2)
{i.s:}
{f.s:}

{kamus}

{algoritma}
    output('-------------------------------------------------')
    for i <- 1 to n do
        output(nama[i])
        output(nilai[i])
    endfor

    indeks[i] <- idx(nilai[i])
    for i <- to n do
        output(indeks[i])
    endfor
endprocedure



{algoritam Utama}
    isi_data(n,nama,nilai)
    tampil_data(n,nama,nilai)