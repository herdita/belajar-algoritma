procedure isi_data(output n:integer, output nim,nama:larik1, output nilai:larik2)
{i.s}
{f.s}

kamus
i:integer

algoritma
    input(n)
    while(n<1)or(n>maksmhs)
        output('jumlah mahasiswa tidak boleh kurang dari 0 dan 100')
        input(n)
    endwhile

    for i <- to n do
        input(nim(i),nama(i),nilai(i))
        while(nilai(i)<0)or(nilai(i)>100)
            output('isikan nilai dari 0 - 100')
            input(nilai(i))
        endwhile
    endfor
endprocedure

function idx(input nilai:integer)->char
{i.s:}
{f.s:}

kamus

algoritma
    depend on (nilai)
        80..100:idx <- 'a'
        70..79 :idx <- 'b'
        60..69 :idx <- 'c'
        50..59 :idx <- 'd'
        0..49  :idx <- 'e'
    enddepend
endfunction

procedure tampildata(input n:integer, input nim,nama:larik1, input nilai:larik2)
{i.s:}
{f.s:}

kamus
function idx (input nilai:integer)->char
i:integer

algoritma
    output('     daftar nilai mahasiswa      ')
    output('---------------------------------')
    output('|no|nim|nama|nilai|indexs|')
    output('---------------------------------')
    for i <- 1 to n do
       indeks(i) <- idx(nilai(i))
       output('|',i,'|',nim(i),'|',nama(i),'|',nilai(i),'|',indeks(i))
    endfor
    output('--------------------------')
endprocedure

{algoritma utama}

daftar_nilai_mahasiswa
{i.s:}
{f.s:}

kamus
    const
      maksmhs=50
    type
      larik1=array[1..maksmhs] of string
      larik2=array[1..maksmhs] of integer
      larik3=array[1..maksmhs] of char
    nim,nama:larik1
    nilai   :larik2
    indeks  :larik3
    n       :integer

    procedure isidata(output n:integer, output nim,nama:larik1, output nilai:larik2)  
    procedure tampil_data(input n:integer, input nim,nama:larik1, input nilai:larik2)

algoritma
    isidata(n,nim,nama,nilai)
    tampil_data(n,nim,nama,nilai)